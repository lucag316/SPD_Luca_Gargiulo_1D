// Parcial parte 1
// Luca Gargiulo 1 D

//-------PINES---------------
#define A 10
#define B 11
#define C 5
#define D 6
#define E 7
#define F 9
#define G 8

#define DISPLAY_UNIDAD A4
#define DISPLAY_DECENA A5
#define APAGADOS 0

#define BOTON_AUMENTAR 4
#define BOTON_DISMINUIR 3
#define BOTON_RESET 2
//----------------------------


//-------VARIABLES GLOBALES-------
int contador = 0;

int flagAumentarEstadoAntes = 1;
int flagDisminuirEstadoAntes = 1;
int flagResetEstadoAntes = 1;
//--------------------------------

void setup()
{
  //--------SALIDAS DIGITALES---------
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  
  pinMode(DISPLAY_UNIDAD, OUTPUT);
  pinMode(DISPLAY_DECENA, OUTPUT);
  //--------------------------------
  
  //--------ENTRADAS DIGITALES---------
  pinMode(BOTON_AUMENTAR, INPUT_PULLUP);
  pinMode(BOTON_DISMINUIR, INPUT_PULLUP);
  pinMode(BOTON_RESET, INPUT_PULLUP);
  //---------------------------------
  
  
  //---------INICIALIZO PINES APAGADOS----------
  digitalWrite(DISPLAY_UNIDAD,0);
  digitalWrite(DISPLAY_DECENA,0);
  //----------------------------------------
  
  // muestro 0 en el display
  printDigit(0);
}

void loop()
{
  //guardo en una variable el boton que se presiono
  int teclaPresionada = presionarTecla();
 
  // me fijo que boton se presiono
  if(teclaPresionada == BOTON_AUMENTAR)//si se presiono, aumento 1
  {
  	contador++;
    if(contador > 99)//si supero 99, vuelvo a 0
    {
    	contador = 0;
    }
  }
  else if(teclaPresionada == BOTON_DISMINUIR)//si se presiono, disminuyo 1
  {
  	contador--;
    if(contador < 0)//si bajo a menos de 0, voy a 99
    {
    	contador = 99;
    }
  }
  else if(teclaPresionada == BOTON_RESET)//si se presiono, reseteo a 0
  {
    contador = 0;
  }

  //muestro el valor actual del contador
  printCount(contador);
}


int presionarTecla()//detecta que boton se presiono y devuelve el valor
{
	int estadoAumentar = digitalRead(BOTON_AUMENTAR); // devuelve 0 si presiono, 1 si no presiono
  	int estadoDisminuir = digitalRead(BOTON_DISMINUIR);
  	int estadoReset = digitalRead(BOTON_RESET);
  
  	if(estadoAumentar) // si no presione suma, 0 es encendido, 1 apagado
  	{
      flagAumentarEstadoAntes = 1; // entonces antes tampoco estaba presionada
  	}
  	if(estadoDisminuir) // si no presione resta
  	{
      flagDisminuirEstadoAntes = 1;
  	}
  	if(estadoReset) // si no presione reset
  	{
      flagResetEstadoAntes = 1;
  	}
  
  	// me fijo si no estaba presionado previamente
  	if(estadoAumentar == 0 && flagAumentarEstadoAntes == 1)
    {
    	flagAumentarEstadoAntes = estadoAumentar; //cambio el estado antes
        return BOTON_AUMENTAR;
    }
  	if(estadoDisminuir == 0 && flagDisminuirEstadoAntes == 1)
    {
    	flagDisminuirEstadoAntes = estadoDisminuir;
        return BOTON_DISMINUIR;
    }
  	if(estadoReset == 0 && flagResetEstadoAntes == 1)
    {
    	flagResetEstadoAntes = estadoReset;
        return BOTON_RESET;
    }
  
  return 0; // o no presione ninguna, o presione una que ya estaba apretada
}

void prenderDigito(int digito)//controla el encendido y apagado por unidad y decena de los display
{
	if(digito == DISPLAY_UNIDAD) // si el digito es UNIDAD
    {
    	digitalWrite(DISPLAY_UNIDAD, LOW); // pongo el comun de unidad en cero (prendido)
      	digitalWrite(DISPLAY_DECENA, HIGH); // pongo el comun de decena en uno (apagado)
    	delay(10);
    }
  	else if(digito == DISPLAY_DECENA)
    {
        digitalWrite(DISPLAY_UNIDAD, HIGH);
      	digitalWrite(DISPLAY_DECENA, LOW);
      	delay(10);
    }
  	else
    {
    	digitalWrite(DISPLAY_UNIDAD, HIGH);//apago 
      	digitalWrite(DISPLAY_DECENA, HIGH);//apago
    }
}

void printDigit(int digit)//muestra el digito pasado por parametro en un display
{
    digitalWrite(A, LOW);
    digitalWrite(B, LOW);
    digitalWrite(C, LOW);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, LOW);
  
	switch(digit)
    {
    	case 0:
      		MostrarCero();
      		break;
      	
      	case 1:
      		MostrarUno();
        	break;
      
      	case 2:
      		MostrarDos();
      		break;
      
      	case 3:
      		MostrarTres();
       		break;
      
      	case 4:
      		MostrarCuatro();
       		break;
      
      	case 5:
      		MostrarCinco();
       		break;
      
      	case 6:
      		MostrarSeis();
       		break;
      
      	case 7:
      		MostrarSiete();
       		break;
      
      	case 8:
      		MostrarOcho();
       		break;
      
      	case 9:
      		MostrarNueve();
       		break;
    }
}

void printCount(int count)//le paso por parametro un numero entre 0 y 99, y lo  muestra en el display
{
    prenderDigito(APAGADOS);//apago ambos digitos antes de mostrar el nuevo
  	printDigit(count / 10);//divido en 10, ej si es 37, me muestra 3 en el display decenas
  	prenderDigito(DISPLAY_DECENA);//enciende el display decenas y apaga el de unidades
  	prenderDigito(APAGADOS);//apago todo antes de mostrar el de unidades
  	printDigit(count - 10 * (int(count / 10)));//cuenta ej 37, me da el 7 para las unidades
  	prenderDigito(DISPLAY_UNIDAD);//prendo el display unidades y apago el de decenas
}

void MostrarCero()
{
	digitalWrite(A, HIGH);
  	digitalWrite(B, HIGH);
  	digitalWrite(C, HIGH);
  	digitalWrite(D, HIGH);
  	digitalWrite(E, HIGH);
  	digitalWrite(F, HIGH);
  	digitalWrite(G, LOW);
}

void MostrarUno()
{
	digitalWrite(A, LOW);
    digitalWrite(B, HIGH);
    digitalWrite(C, HIGH);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, LOW);
}

void MostrarDos()
{
	digitalWrite(A, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(C, LOW);
    digitalWrite(D, HIGH);
    digitalWrite(E, HIGH);
    digitalWrite(F, LOW);
    digitalWrite(G, HIGH);
}

void MostrarTres()
{
	digitalWrite(A, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, HIGH);
}

void MostrarCuatro()
{
	digitalWrite(A, LOW);
    digitalWrite(B, HIGH);
    digitalWrite(C, HIGH);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, HIGH);
    digitalWrite(G, HIGH);
}

void MostrarCinco()
{
	digitalWrite(A, HIGH);
    digitalWrite(B, LOW);
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(E, LOW);
    digitalWrite(F, HIGH);
    digitalWrite(G, HIGH);
}
void MostrarSeis()
{
	digitalWrite(A, HIGH);
    digitalWrite(B, LOW);
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(E, HIGH);
    digitalWrite(F, HIGH);
    digitalWrite(G, HIGH);
}
void MostrarSiete()
{
	digitalWrite(A, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(C, HIGH);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, LOW);
}
void MostrarOcho()
{
	digitalWrite(A, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(E, HIGH);
    digitalWrite(F, HIGH);
    digitalWrite(G, HIGH);
}
void MostrarNueve()
{
	digitalWrite(A, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(C, HIGH);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, HIGH);
    digitalWrite(G, HIGH);
}
